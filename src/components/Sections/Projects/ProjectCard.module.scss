@import "../../../scss/style.scss";

.project-wrapper {
  position: relative;
  min-width: 330px;
  max-width: 350px;
  margin-right: -12rem;
  overflow: hidden;
  transform: scale(1) perspective(1000px) rotateY(-15deg);
  transform-origin: right;
  transform-style: preserve-3d;
  filter: drop-shadow(30px 20px 20px rgba(0, 0, 0, 0.3));
  transition: all var(--transition-short-medium)
    cubic-bezier(0.53, -0.3, 0.25, 0.99);
  transition-property: transform, filter;
  scroll-snap-align: center;
  @media (max-width: $big-tablet) {
    max-width: 90vw;
  }
  &:hover {
    transform: perspective(1000px) scale(1)
      translateX(calc(170px - var(--project-card-gap))) rotateY(-15deg) !important;
    @media (max-width: $mobile) {
      transform: perspective(1000px) scale(1)
        translateX(var(--project-card-gap));
    }
  }

  &:hover:first-child {
    transform: perspective(1000px) scale(1) translateX(0) rotateY(0deg) !important;
    @media (max-width: $mobile) {
      transform: perspective(1000px) scale(1) translateX(0) rotateY(0deg) !important;
    }
  }
  &:nth-child(1) {
    z-index: 10;
  }
  &:nth-child(2) {
    z-index: 9;
  }
  &:nth-child(3) {
    z-index: 8;
  }
  &:nth-child(4) {
    z-index: 7;
  }
  &:nth-child(5) {
    z-index: 6;
  }

  &.selected-project:hover {
    transform: perspective(1000px) scale(1.1)
      translateX(calc(230px - var(--project-card-gap))) rotateY(0deg) !important;
    filter: drop-shadow(0px 0px 10px rgba(0, 0, 0, 0.3));
    @media (max-width: $mobile) {
      transform: perspective(1000px) scale(1.1) translateX(35%) rotateY(0deg) !important;
      &:is(:last-child) {
        transform: perspective(1000px) scale(1.1) translateX(-10%) rotateY(0deg) !important;
      }
    }
  }

  &.selected-project {
    transform: perspective(1000px) scale(1.1) translateX(35%) !important;
    animation: zindex 100s forwards;
    @media (max-width: $mobile) {
      transform: perspective(1000px) scale(1.1) translateX(35%) !important;
      &:is(:last-child) {
        transform: perspective(1000px) scale(1.1) translateX(-10%) rotateY(0deg) !important;
      }
    }
  }
}
.selected-step1 {
  transform: perspective(1000px) scale(1)
    translateX(calc(170px - var(--project-card-gap))) rotateY(-15deg) !important;
  @media (max-width: $mobile) {
    transform: perspective(1000px) scale(1) translateX(var(--project-card-gap));
  }
}

.project {
  position: relative;
  display: grid;
  grid-template-rows: 1fr 2fr;
  min-width: 290px;
  min-height: 540px;
  color: var(--color-gray);
  background: linear-gradient(
    60deg,
    var(--color-dark-3) 30%,
    var(--color-blue-shade-1) 100%
  );
  background-repeat: no-repeat;
  transform-style: preserve-3d;
  perspective: 400px;
  transition: all var(--transition-short-medium);
  transition-property: transform;
  user-select: none;
  aspect-ratio: 1/1.7;
  .project-image-window {
    position: relative;
    display: flex;
    align-items: flex-end;
    justify-content: center;
    width: 100%;
    height: 100%;

    a {
      min-width: 100%;
      height: 100%;
      min-height: 100%;
    }
  }
  .project-link {
    display: block;
  }

  &-image {
    position: relative;
    width: 100%;
    height: 100%;
    border-radius: 0px 7px 0 0;
    transform-style: preserve-3d;
    filter: brightness(0.9);
    transition: var(--transition-short);

    &:hover {
      transform: scale(1);
      filter: brightness(1.05);
    }
  }

  &-description {
    display: grid;
    grid-template-rows: auto 1fr auto;
    width: 100%;
    padding: 6px 6px;
    overflow: hidden;
    cursor: pointer;
  }
  .project-title {
    align-self: center;
    justify-self: end;
    margin-right: -1rem;
    padding: 6px 24px;
    font-weight: 700;
    font-size: 32px;
    text-align: end;
    text-transform: uppercase;
    transition: all var(--transition-short);
    transition-property: text-shadow, color;
    @media (max-width: $laptop) {
      font-size: 24px;
    }
  }
  .project-overview {
    padding: 0 6px;
    font-size: 1.25rem;
    line-height: 1.5;
    text-align: left;
    cursor: pointer;
    @include flexbox(center, flex-start);
    p {
      display: inline-block;
      height: auto;
    }
    @media (max-width: $big-tablet) {
      font-size: 20px;
    }
  }
}

.links {
  @include flexbox(flex-start, flex-start);
  position: absolute;
  top: 0;
  left: 0rem;
  z-index: 10;
  gap: 1rem;
  width: 130px;
  height: 130px;
  background-color: rgba(0, 0, 0, 0.788);
  @include corner-cut(140px);

  a {
    width: 70px;
    height: 70px;
    padding: 6px;
    filter: invert(1);
    img {
      transition: all var(--transition-short);
      transition-property: transform;

      &:hover {
        transform: scale(1.1);
      }
    }
  }
}
